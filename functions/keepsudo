# Keeps sudo alive until the attached process has finished
# Options:
#   -a    PID of attached process, invoking process by default
#   -p    Custom prompt for `sudo`

keepsudo() {
  local code
  local pid=$$
  local OPTIND OPTION

  while getopts “a:p:” OPTION; do
    case $OPTION in
      a)
        pid="${OPTARG}";;
      p)
        prompt="${OPTARG}";;
    esac
  done

  # Prompt for password
  if [[ "${prompt}" ]]; then
    sudo -v -p "${prompt}" 2> /dev/null
  else
    sudo -v 2> /dev/null
  fi
  code=$?

  # Keep-alive: update existing `sudo` time stamp until the script has finished
  while true; do sudo -n true; sleep 60; kill -0 "${pid}" || exit; done 2> /dev/null &

  return ${code}
}
