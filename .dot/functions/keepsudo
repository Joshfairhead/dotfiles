# Keeps sudo alive until the attached process has finished
# Options:
#   -a    PID of attached process, invoking process by default
#   -p    Custom prompt for `sudo`

keepsudo() {
  local code
  local pid=$$
  local OPTIND OPTION

  while getopts “a:p:” OPTION; do
    case $OPTION in
      a)
        pid="${OPTARG}";;
      p)
        prompt="${OPTARG}";;
    esac
  done

  # Prompt for password
  if [[ "${prompt}" ]]; then
    sudo -v -p "${prompt}" 2> /dev/null
  else
    sudo -v 2> /dev/null
  fi
  code=$?

  if [[ ${code} == 0 ]]; then
    _brew_disable_sudo_k
    _keep_sudo_alive 2> /dev/null &
  fi

  return ${code}
}

_keep_sudo_alive() {
  while true; do
    sudo -n true;
    sleep 60;
    kill -0 "${pid}" || ! _brew_reset || exit;
  done
}

_brew_disable_sudo_k() {
  if [[ $(which brew) ]]; then
    local build_rb="$(brew --repository)/Library/Homebrew/build.rb"
    sed -i.bak '/system.*sudo.*-k.*$/d' ${build_rb}
  fi
}

_brew_reset() {
  if [[ $(which brew) ]]; then
    (cd "$(brew --repository)" && git reset --hard && git clean -d -f) > /dev/null 2>&1
  fi
}
