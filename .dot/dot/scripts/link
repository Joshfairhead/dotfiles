#!/usr/bin/env bash
# Finds .symlink and .csymlink files and symlinks them to ~ and ~/.config respectively.
source $HOME/.dotfiles/.dot/dot/env

u=`tput smul`
offu=`tput sgr0`

link_file() {
  local src=$1 dst=$2

  local overwrite= backup= skip=
  local action=

  if [ -f "${dst}" -o -d "${dst}" -o -L "${dst}" ]; then
    if [[ "${overwrite_all}" == "false" ]] && [[ "${backup_all}" == "false" ]] && [[ "${skip_all}" == "false" ]]; then
      pprint info-warn "$(basename "${src}") already exists: [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
      action=$(readone)

      case "${action}" in
        o)
          overwrite=true;;
        O)
          overwrite_all=true;;
        b)
          backup=true;;
        B)
          backup_all=true;;
        S)
          skip_all=true;;
        *)
          skip=true;;
      esac
    fi

    overwrite=${overwrite:-$overwrite_all}
    backup=${backup:-$backup_all}
    skip=${skip:-$skip_all}
    overwritten=
    backedup=

    if [[ "${overwrite}" == "true" ]]; then
      rm -rf "${dst}"
      overwritten=' (overwritten)'
    fi

    if [[ "${backup}" == "true" ]]; then
      mv "${dst}" "${dst}.backup"
      backedup=' (backed up)'
    fi

    if [[ "${skip}" == "true" ]]; then
      pprint info-ok "Skipped ${u}$(dotbasepath ${src})${offu}"
    fi
  fi

  if [[ "${skip}" != "true" ]]; then
    ln -s "${src}" "${dst}"
    pprint info-ok "Linked ${u}$(dotbasepath ${src})${offu} to ${u}${dst}${offu}${overwritten}${backedup}"
  fi
}

link_dotcore() {
  local overwrite_all=false backup_all=false skip_all=false
  pprint step-go "Linking core dotfiles from ${u}$DOT/.dot${offu} to ${u}$HOME${offu}:"
  for src in $(find -H "$DOT/.dot" -maxdepth 2 -name '*.symlink' -not -path '*.git*'); do
    dst="$HOME/.$(basename "${src%.*}")"
    link_file "${src}" "${dst}"
  done
}

link_dotfiles() {
  local overwrite_all=false backup_all=false skip_all=false
  pprint step-go "Linking dotfiles from ${u}$DOT${offu} to ${u}$HOME[/.config]${offu}:"
  for src in $(find -H "$DOT" -maxdepth 2 -name '*.symlink' -not -path '*.git*'); do
    dst="$HOME/.$(basename "${src%.*}")"
    link_file "${src}" "${dst}"
  done
  for src in $(find -H "$DOT" -maxdepth 2 -name '*.csymlink' -not -path '*.git*'); do
    dst="$HOME/.config/$(basename "${src%.*}")"
    link_file "${src}" "${dst}"
  done
}

pprint section "LINKING DOTFILES TO HOME FOLDER"
link_dotcore
pprint newline
link_dotfiles
pprint newline
pprint step-ok -n "All dotfiles linked"
