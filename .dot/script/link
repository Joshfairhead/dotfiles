#!/usr/bin/env bash
# Puts dotfiles in their place
source $HOME/.dotfiles/.dot/env

link_file() {
  local src=$1 dst=$2

  local overwrite= backup= skip=
  local action=

  if [ -f "${dst}" -o -d "${dst}" -o -L "${dst}" ]; then
    if [[ "${overwrite_all}" == "false" ]] && [[ "${backup_all}" == "false" ]] && [[ "${skip_all}" == "false" ]]; then
      pprint step-user "File already exists: $(basename "${src}"), what do you want to do? [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
      action=$(readone)

      case "${action}" in
        o)
          overwrite=true;;
        O)
          overwrite_all=true;;
        b)
          backup=true;;
        B)
          backup_all=true;;
        S)
          skip_all=true;;
        *)
          skip=true;;
      esac
    fi

    overwrite=${overwrite:-$overwrite_all}
    backup=${backup:-$backup_all}
    skip=${skip:-$skip_all}

    if [[ "${overwrite}" == "true" ]]; then
      rm -rf "${dst}"
      pprint step-ok "Removed ${dst}"
    fi

    if [[ "${backup}" == "true" ]]; then
      mv "${dst}" "${dst}.backup"
      pprint step-ok "Moved ${dst} to ${dst}.backup"
    fi

    if [[ "${skip}" == "true" ]]; then
      pprint step-ok "Skipped ${src}"
    fi
  fi

  if [[ "${skip}" != "true" ]]; then
    ln -s "${src}" "${dst}"
    pprint step-ok "Linked ${src} to ${dst}"
  fi
}

link_dotfiles() {
  local overwrite_all=false backup_all=false skip_all=false
  for src in $(find "$DOT" -maxdepth 2 -name '*.symlink'); do
    dst="$HOME/.$(basename "${src%.*}")"
    link_file "${src}" "${dst}"
  done
}

pprint section "LINKING DOTFILES TO HOME FOLDER"
link_dotfiles
pprint step-ok "All dotfiles linked"
pprint newline
